"""
Django settings for waitlist project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8ub7r006_l25z*ojh$9%g9=&8ib49*n3f)*+jjm%rm^8ht(#@&'

# SECURITY WARNING: don't run with debug turned on in production!
# DATABASE WARNING: don't run with debug turned on in production! (Python Anywhere, git:main)
DEBUG = True

ALLOWED_HOSTS = ['waitlistwm.pythonanywhere.com', '127.0.0.1']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'crispy_bootstrap4',
    'waitlist.studentview',
    'waitlist.users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'waitlist.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'static/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'waitlist.wsgi.application'

# These settings correspond to the postgres server configuration for WaitlistWM on Python Anywhere
# See https://www.pythonanywhere.com/user/WaitlistWM/databases/

POSTGRES_DB_NAME = 'postgres'
POSTGRES_SUPER_USER = 'super'
POSTGRES_SUPER_USER_PW = 'Foo12345'
POSTGRES_SSH_HOSTNAME = 'WaitlistWM-3129.postgres.pythonanywhere-services.com'
POSTGRES_SSH_HOST_PORT = 13129

# (DEBUG only)
# Troubleshooting:
#
# These settings should match your localhost and the port of the active ssh tunnel
# ssh -L [ LOCAL_SSH_PORT ]:WaitlistWM-3129.postgres.pythonanywhere-services.com:13129 WaitlistWM@ssh.pythonanywhere.com
#
# error: could not listen on port [ LOCAL SSH_PORT ]
#   - This port is already in use, try a different port number.
# ssh: ... Connection refused
#   - Have you created an ssh key and added it to our Python Anywhere server's authorized keys?
#   - See README.md
# DisallowedHost: django server starts but requests return DisallowedHost Exception
#   - Add your non-default [ LOCALHOST ] value to ALLOWED_HOSTS

LOCALHOST = '127.0.0.1'
LOCAL_SSH_PORT = 5432

### Use the following for the sqlite database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

### Use the following for postgres based database

# if DEBUG == True:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.contrib.gis.db.backends.postgis',
#             'NAME': POSTGRES_DB_NAME,
#             'USER': POSTGRES_SUPER_USER,
#             'PASSWORD': POSTGRES_SUPER_USER_PW,
#             'HOST': LOCALHOST,
#             'PORT': LOCAL_SSH_PORT
#         },
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': POSTGRES_DB_NAME,
#             'USER': POSTGRES_SUPER_USER,
#             'PASSWORD': POSTGRES_SUPER_USER_PW,
#             'HOST': POSTGRES_SSH_HOSTNAME,
#             'PORT': POSTGRES_SSH_HOST_PORT
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_TEMPLATE_PACK = 'bootstrap4'
LOGIN_REDIRECT_URL = 'student-home'
